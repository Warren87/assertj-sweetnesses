package domainobjects;

/**
 * {@link Article} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractArticleAssert} instead.
 */

public class ArticleAssert extends AbstractArticleAssert<ArticleAssert, Article> {

  /**
   * Creates a new <code>{@link ArticleAssert}</code> to make assertions on actual Article.
   * @param actual the Article we want to make assertions on.
   */
  public ArticleAssert(Article actual) {
    super(actual, ArticleAssert.class);
  }

  /**
   * An entry point for ArticleAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myArticle)</code> and get specific assertion with code completion.
   * @param actual the Article we want to make assertions on.
   * @return a new <code>{@link ArticleAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static ArticleAssert assertThat(Article actual) {
    return new ArticleAssert(actual);
  }
}
