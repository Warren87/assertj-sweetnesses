package gson;

import com.google.gson.JsonElement;

/**
 * {@link JsonElement} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractJsonElementAssert} instead.
 */
public class JsonElementAssert extends AbstractJsonElementAssert<JsonElementAssert, JsonElement> {

  /**
   * Creates a new <code>{@link JsonElementAssert}</code> to make assertions on actual JsonElement.
   * @param actual the JsonElement we want to make assertions on.
   */
  public JsonElementAssert(JsonElement actual) {
    super(actual, JsonElementAssert.class);
  }

  /**
   * An entry point for JsonElementAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myJsonElement)</code> and get specific assertion with code completion.
   * @param actual the JsonElement we want to make assertions on.
   * @return a new <code>{@link JsonElementAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static JsonElementAssert assertThat(JsonElement actual) {
    return new JsonElementAssert(actual);
  }
}
